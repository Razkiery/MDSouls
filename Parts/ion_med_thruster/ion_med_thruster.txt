Part : /BASE_PART
{
	NameKey = "Parts/IonMedThruster"
	IconNameKey = "Parts/IonMedThrusterIcon"
	IDString = ion_med_thruster
	EditorGroup = "FlightT2"
	DescriptionKey = "Parts/IonMedThrusterDesc"
	Cost = 1500
	TypeCategories = [thruster]
	Size = [1, 3]
	PhysicalRect = [0, 0, 1, 2]
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "thrusters"
	MaxHealth = 2000
	PenetrationResistance = 1
	ProhibitBelow = 4
	ThrusterForce = 200
	FuelUsage = 100
	AllowedDoorLocations
	[
		[-1, 0]
		[0, -1]
		[1, 0]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [21.33, 64]
	}
	BlueprintSprites
	[
		{
			File = "blueprints.png"
			Size = [1, 3]
			Offset = [0, 0]
		}
	]
	PowerUIStats
	{
		Min = .0333
		Ideal = .0666
	}
	CrewUIStats
	{
		Min = .125
		Ideal = .25
	}
	Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			DefaultToggleValue = 1
			RequiredForWholePartOperation = true
			ToggledOnChoices = [1]
		}

		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = ionbattery
			MaxAmmo = 2000
			LowConsumeJobPriority = &/TERRAN_PRIORITIES/MedThruster_LowConsume
			HighConsumeJobPriority = &/TERRAN_PRIORITIES/MedThruster_HighConsume
			EmptyConsumeJobPriority = &/TERRAN_PRIORITIES/MedThruster_EmptyConsume
			JobUnassignThreshold = 1000000// Effectively unassignable.
			ResupplyThreshold = 500
			RequiredForWholePartOperation = true
			AmmoDesireToggle = PowerToggle

			ReceiveAmmoMediaEffects = &/EFFECT_PREFABS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, 1]
			Floor
			{
				Layer = "floors"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 3]
					}
					{
						File = "floor_33.png"
						Size = [1, 3]
					}
					{
						File = "floor_66.png"
						Size = [1, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				Offset = [0, .5]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads on1.png"
							"doodads on2.png"
							"doodads on3.png"
							"doodads on4.png"
							"doodads on5.png"
							"doodads on6.png"
							"doodads on7.png"
							"doodads on8.png"
						]
						Size = [1, 3]
						AnimationInterval = 0.075
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "doodads off.png"
						Size = [1, 3]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 3]
					}
					{
						File = "walls_33.png"
						Size = [1, 3]
					}
					{
						File = "walls_66.png"
						Size = [1, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				Offset = [0, 0]
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 2]
					}
					{
						File = "roof_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_66.png"
						Size = [1, 2]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, .5]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads_on1.png"
							"roof_doodads_on2.png"
							"roof_doodads_on3.png"
							"roof_doodads_on4.png"
							"roof_doodads_on5.png"
							"roof_doodads_on6.png"
							"roof_doodads_on7.png"
							"roof_doodads_on8.png"
						]
						Size = [1, 3]
						AnimationInterval = 0.075
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "roof_doodads_off.png"
						Size = [1, 3]
						AnimationInterval = 0.1
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_on.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_on_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_on_66.png"
						Size = [1, 2]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_off.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_off_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_off_66.png"
						Size = [1, 2]
					}
				]
			}
		}

		BatterySprites
		{
			Type = AmmoSprites
			Location = [.5, 1.5]
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "batteries 0.png"
					Size = [1, 3]
				}
				{
					File = "batteries 1.png"
					Size = [1, 3]
				}
				{
					File = "batteries 2.png"
					Size = [1, 3]
				}
			]
		}

		MainThruster
		{
			Type = Thruster
			Location = [0.5, 2.5]// Relative to upper-left corner of unrotated part.
			Rotation = 90d// Relative to unrotated part.
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = 1
			MinUncommandedActivation = 0
			MaxUncommandedActivation = &MaxActivation
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		LateralThruster
		{
			Type = Thruster
			ChainedTo = MainThruster
			Rotation = 90d// Relative to main thruster.
			Force = &../../ThrusterForce
			MinActivation = -0.2
			MaxActivation = 0.2
			MinUncommandedActivation = 0
			MaxUncommandedActivation = 0
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		ThrustEffects
		{
			Type = ContinuousEffects
			ChainedTo = MainThruster
			FactorMediaEffectsIntensityWith = MainThruster
			MediaEffects
			[
				&/PARTICLES/IonMedThrusterTrail
				&/PARTICLES/IonMedThrusterGlow

				: /SOUNDS/ThrusterRumble
				{
					Volume = .125
					Speed = 1.5
					MaxConcurrentVolume = .25
				}
			]
		}

		BurstTrigger
		{
			Type = ThresholdTrigger
			AmountFrom = MainThruster
			MinAmount = .5
		}

		BurstEffects
		{
			Type = TriggeredEffects
			ChainedTo = MainThruster
			Trigger = BurstTrigger
			FactorMediaEffectsIntensityWith = MainThruster
			AnchorMediaEffects = true
			MediaEffects
			[
				: /SOUNDS/ThrusterBurst
				{
					Volume = .25
					Speed = 1.5
					MaxConcurrentVolume = .5
				}
			]
		}

		OperationEffects
		{
			Type = OperationEffects
			Location = [.5, 1]
			BecameOperationalMediaEffects = &/EFFECT_PREFABS/MachinesOn
			BecameNonOperationalMediaEffects = &/EFFECT_PREFABS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/EFFECT_PREFABS/SmallPartDestroyed
			Location = [.5, 1]
		}

		ThrusterHum
		{
			Type = ContinuousEffects
			Location = [.5, 1]
			OnlyWhenOperational = true
			MediaEffects
			[
				: /SOUNDS/ThrusterHum
				{
					Volume = .1
					Speed = 1.25
					MaxConcurrentVolume = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Source = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Source = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}
	}
}
